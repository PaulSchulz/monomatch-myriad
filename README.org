#+TITLE: monomatch-myriad 

A collection of resources to make the "Monomatch: Myriad" cards. Icons etc.

Maintainer: Paul Schulz <paul at mawsonlakes dot org>

* Contents :TOC:
- [[#introduction][Introduction]]
  - [[#progress][Progress]]
  - [[#background][Background]]
  - [[#the-licensing-issue][The Licensing Issue]]
- [[#the-deal-with-these-tools][The deal with these tools]]
- [[#card-sets][Card Sets]]
- [[#contributions-of-interestins-icons-or-emogies][Contributions of interestins Icons or Emogies]]
- [[#references][References]]

* Introduction

Dobble[1] (or Spot It[2]) is a game with with a set of cards, which requires players to spot
the shared symbol between any two of the cards in the set.

** Progress
- May 2021 :: Initial commit and ideas.
- Feb 2921 :: Revisit with aim of producing a 'standard' 55 card deck.
    
** Background
In the Stand-up Maths video "How does Dobble (Spot It) work?"[3], Matt Parker
from Stand-up Maths, describes how the mathematics behind this type pf
'monomatch' game works.

The Dobble (or Spot It) pack uses 55 cards (is missing 2 cards from a
complete set), and is based on 8 symbols on each card.

With the aim to make a contribution in the area of monomatch games, Matt
produced a set of 1,001 cards with 10,303 unique icons, with 102 icons on each
card.

Some of the other considerations included:
- Avoiding manual checking of images;
- Avoid icons printed with thin lines;
- With Colors chosen to optimise ability to distinguish colours for most common
  forms of colour blindness;
- Biggest dimension of icon is 200 (x or y);
- Icons rotated by arbitrary angle only (no scaling).
- Code is verifyable on small icon case (eg. with Dobble with )

Here are some other comments from Matt about how his cards were created:

*** Single use code
The python code used to manipulate the icon files and produce the cards was
deemed to be 'single use' and so it was decided not to share it directly. Matt
was nice enough to explain how the programs he wrote worked and how they were
glued together, so it is possible to replicate this 'single use' code.

*** Colourer and Re-colouring (Python)
The colour for each icon is chosen to optimise ability to distinguish colours
for most common forms of colour blindness and changes the icons colour (default
forground color is black) and adds transparency.

*** Use of photoshop
A pentagon file shape used in photoshop to layout 20 icon positions in a 1/5th
segment of the pentagon and display. 

*** Coordinate Spreadsheet
A spreadsheet was used to create the full set of coordinates. The location for
the 20 icons from the previous step are rotated four times by 72 degrees. Two
icons were added manually to the middle of the card at the end.

*** Card Allocator (Python)
This code allocates icons to cards.

*** Making Cards (Python)
Creates PNG files of card for printing.

** The Licensing Issue

The cards, as they were originally produced, were not able to be made generally
available, for sale or otherwise, due to the licensing conditions on the images
used by Matt in their creation.

This repository aims to fix this by providing suitably licensed resources
(icons) so that a complete set of cards can be produced and distributed, free of
this restriction.

* The deal with these tools
This is currently a personal hobby project and nothing has yet been discussed
with Matt Parker about this repository or it's eventual use.

Everything collected here will be made available under a Libra and Open Source
license, which has currently been chosen to be the GNU AFFERO GENERAL PUBLIC
LICENSE (Version 3, 19 November 2007). IANAL, so if someone has a good reason
for this to be changed I would be happy to hear it.

* Card Sets
Monomatch sets of cards can be generated from projective planes of prime order
(or even orders of prime orders). Depending on the number of icons that are
collected, different size card sets can be created.

|-----------+-------------+----------+-------------|
| Generator |       Cards |  Symbols |     Symbols |
|   (order) |             | per card |       total |
|-----------+-------------+----------+-------------|
|         n | (n+1)*n + 1 |      n+1 | (n+1)*n + 1 |
|-----------+-------------+----------+-------------|
|         3 |          13 |        4 |          13 |
|         5 |          31 |        6 |          31 |
|         7 |          57 |        8 |          57 |
|        11 |         133 |       12 |         133 |
|        13 |         183 |       14 |         183 |
|        17 |         307 |       18 |         307 |
|        19 |         381 |       20 |         381 |
|        23 |         553 |       24 |         553 |
|        29 |         871 |       30 |         871 |
|        31 |         993 |       32 |         993 |
|        37 |        1407 |       38 |        1407 |
|        41 |        1723 |       42 |        1723 |
|        43 |        1893 |       44 |        1893 |
|        47 |        2257 |       48 |        2257 |
|        53 |        2863 |       54 |        2863 |
|        59 |        3541 |       60 |        3541 |
|        61 |        3783 |       62 |        3783 |
|        67 |        4557 |       68 |        4557 |
|        71 |        5113 |       72 |        5113 |
|        73 |        5403 |       74 |        5403 |
|        79 |        6321 |       80 |        6321 |
|        83 |        6973 |       84 |        6973 |
|        89 |        8011 |       90 |        8011 |
|        97 |        9507 |       98 |        9507 |
|       101 |       10303 |      102 |       10303 |
|-----------+-------------+----------+-------------|
#+TBLFM: $2=$1 * $1 + $1 +1::$3=$1 + 1::$4=$1 * $1 + $1 + 1

* Contributions of interestins Icons or Emogies
A source of freely usable Icons has been found, so no longer need to create my
own, or rely on contributions. 

Free free to still contribute any icons that you think may be suitable. 

They can be sent through to the project email, but the preferred method is use
GitHub, that way 'the internet' can keep track of your contributons.

Clone this repository, add icon files to the 'icons/incoming' folder, commit
with a suitable commit message (see below) and submit a pull request on GitHub.

- Icon ideas for suitable icons can be placed in 'icons/incoming' as black and
  white png images. They will be removed once converted to suitable icon format.

- Processed icons ready for use will be in 'icons/svg' (in SVG format).

Contributors will be asked to make contributions with a sign-off in their commit
in the same way that contributions are made to the Linux kernel[5].

You will need to agree with the Certificate of Origin[5] and include the
'Signed-off-by:' line in the commit message of your contribution. For example:
#+begin_src 
Signed-off-by: Random J Contributor <random@contributor.example.org>
#+end_src 

Also, please, no unsavoury, obscene or overtly political images, Inclusion of
any image in this set will be at the discretion of the repository holder. 

Thank you for your contributions, Paul

* References
- [1] Dobble on Amazon: https://amazon.com.au/Asmodee-Dobble/dp/B07QVWLSBV
- [2] Spot It on Amazon: https://www.amazon.com.au/SPOT-IT/dp/B076HFTXYB
- [3] How does Dobble (Spot It) work?
  - Youtube: Stand-up Maths  https://youtu.be/VTDKqW_GLkw
- [4] How I made a game with 10,303 different cards!
  - Youtube: Matt_Parker_2 https://youtube.com/watch?v=_l6h8v6R7yo
- [5] Linux Kernel Certificate of Origin v1.1
  https://01.org/community/signed-process
